{
    "__deus_stulti_metadata__": {
        "timestamp": "2025-06-18T16:40:09.131235",
        "git_branch": "feature/cgrag-llm-config",
        "file_type": "plan"
    },
    "branch_name": "feature/cgrag-llm-config",
    "tasks": [
        {
            "task_id": "1",
            "description": "Modify `dir_assistant/cli/config.py` to add new default configuration options for the CGRAG LiteLLM model, including `LITELLM_CGRAG_CONTEXT_SIZE`, `LITELLM_CGRAG_PASS_THROUGH_CONTEXT_SIZE`, and `LITELLM_CGRAG_COMPLETION_OPTIONS`. These new options will default to the values of their non-CGRAG counterparts (`LITELLM_CONTEXT_SIZE`, `LITELLM_PASS_THROUGH_CONTEXT_SIZE`, and `LITELLM_COMPLETION_OPTIONS`) to ensure backward compatibility and a sensible default behavior."
        },
        {
            "task_id": "2",
            "description": "Modify the `__init__` method of `dir_assistant/assistant/lite_llm_assistant.py` to accept new parameters for `cgrag_lite_llm_completion_options`, `cgrag_lite_llm_context_size`, and `cgrag_lite_llm_pass_through_context_size`. Store these new parameters as instance variables for later use."
        },
        {
            "task_id": "3",
            "description": "Update the `call_completion` method signature in `dir_assistant/assistant/base_assistant.py` to include a new boolean parameter `is_cgrag_call` with a default value of `False`. This allows subclasses to indicate if a call is specifically for CGRAG processing."
        },
        {
            "task_id": "4",
            "description": "Modify the `call_completion` method in `dir_assistant/assistant/lite_llm_assistant.py`. Update its signature to match the one in `BaseAssistant` (adding `is_cgrag_call=False`). Inside the method, add logic to conditionally use the CGRAG-specific completion options, context size, and pass-through context size (stored in task 2) if `is_cgrag_call` is `True`. Otherwise, use the standard LiteLLM options."
        },
        {
            "task_id": "5",
            "description": "Modify the `run_stream_processes` method in `dir_assistant/assistant/cgrag_assistant.py`. When making the `self.call_completion(cgrag_history)` call for the CGRAG prompt, pass the new `is_cgrag_call=True` argument to explicitly signal that this completion request is for the CGRAG model."
        },
        {
            "task_id": "6",
            "description": "Modify `initialize_llm` function in `dir_assistant/cli/start.py`. Retrieve the newly added CGRAG LiteLLM configuration values from the `config_dict` (i.e., `LITELLM_CGRAG_CONTEXT_SIZE`, `LITELLM_CGRAG_PASS_THROUGH_CONTEXT_SIZE`, and `LITELLM_CGRAG_COMPLETION_OPTIONS`). Pass these retrieved values as arguments to the `LiteLLMAssistant` constructor when initializing the LLM."
        },
        {
            "task_id": "7",
            "description": "Update `README.md` to document the new `LITELLM_CGRAG_COMPLETION_OPTIONS`, `LITELLM_CGRAG_CONTEXT_SIZE`, and `LITELLM_CGRAG_PASS_THROUGH_CONTEXT_SIZE` configuration settings. Explain their purpose, how they default to the main LiteLLM settings, and provide an example of how a user can configure a separate model for CGRAG."
        }
    ]
}